body {
    background: rgba(0, 0, 0, 0.01);
    font-family: Verdana, sans-serif;
}

.container {
    width: 960px;
    margin: 0 auto;
    font-size: 100%;
    line-height: 1.5
    
}


/*CLEAR FIX SOLLUTION*/

.clearfix:before,
.clearfix:after {
    content: " ";
    /* 1 */
    display: table;
    /* 2 */
}

.clearfix:after {
    clear: both;
}


/**
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */

.clearfix {
    *zoom: 1;
}

/*********************************************************************************************
    default display of elements on the page is called "stacked"

    to get the elements on the same line, we use something called flexbox
    to invoke flexbox use the rule::after
             display: flex;
    
    flexbox attemps to place all the elements within its "immediate specified container"
        area on the same line

    Immediate?? the next level of elements
    flexbox will automatically adjust measurements to get all elements to appear on the 
        same line REGARDLESS of the physical width set for the element
    
    PROBLEM: I don't want all elements on the same line having their measurements altered

    SOLUTION: alter the defualt wrapping for flexbox which is nowrap 

    RULE: flex-wrap: wrap;

    ^^^^^^^^^^^^^^^^^^^^^^^ THIS WILL PLACE AS MANY ELEMENTS AS POSSIBLE ON A SINGLE ROW
        WITHOUT ADJUSTING THE MEASUREMENTS OF YOUR ELEMENTS
    ANY LEFT OFVER ELEMENTS WILL WRAP TO THE FOLLOWING LINE UNTIL ALL THE ELEMENTS HAVE BEEN 
        DISPLAYED   

    WARNING: flex-wrap affects a flex display are. Without the display: flex;
                rule, flex-wrap is meaningless.

    flexbox will affect positioning that is normal within your page such as margin collapse. 
***********************************************************************************************/

main {
    border: 2px solid black;
    background-color: lightgrey;
    display: flex; 
    flex-wrap:nowrap; 
}

.red-paint{
    border: 2px solid black;
    margin-left: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
    height: 600px;
    width: 150px;
    background-color: red;

}


.blue-paint{
    border: 2px solid black;
    margin: 10px 0px 10px 10px;
    height: 292.5px;
    width: 770px;
    background-color: blue;

}
/*
 960 - (2 + 2 + 10 + 2 + 150) = 794 (remainding width minus red content) 

794 = 10 + 2 + 0 + content + 0 + 2 + 0 + 10
794 = 24 + content
770 = content
*/

/*
height two boxes (600 given height for red box)
 600 = 2*(content +15)
 585 = 2content
 292.5 = content
*/
.green-paint{
    border: 2px solid black;
    margin: 0px 10px 10px 10px;
    height: 292.5px;
    width: 770px;
    background-color: limegreen;
    
}

/*
 960 - (2 + 2 + 10 + 2 + 150) = 794 (remainding width minus red content) 

794 = 10 + 2 + 0 + content + 0 + 2 + 0 + 10
794 = 24 + content
770 = content
*/

/*
height for the two boxes (600 given height for red box)
 600 = 2*(content +15)
 585 = 2content
 292.5 = content
*/